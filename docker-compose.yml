services:

  locize-backup:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-}
        VCS_REF: ${VCS_REF:-}
        LOCIZE_CLI_VERSION: ${LOCIZE_CLI_VERSION:-10.3.2}
    image: ligouras/locize-backup:latest
    container_name: locize-backup-dev

    # Additional environment variables for development
    environment:
      # Locize Configuration
      - LOCIZE_PROJECT_ID=${LOCIZE_PROJECT_ID}
      - LOCIZE_API_KEY=${LOCIZE_API_KEY}
      - LOCIZE_VERSION=${LOCIZE_VERSION:-latest}
      - LOCIZE_LANGUAGES=${LOCIZE_LANGUAGES}
      - LOCIZE_NAMESPACES=${LOCIZE_NAMESPACES}

      # S3/MinIO Configuration
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL:-}
      - AWS_PROFILE=${AWS_PROFILE:-}

      # Backup Settings
      - MAX_RETRIES=${MAX_RETRIES:-1}
      - RETRY_DELAY=${RETRY_DELAY:-0}
      - RATE_LIMIT_DELAY=${RATE_LIMIT_DELAY:-0}
      - CLEANUP_LOCAL_FILES=${CLEANUP_LOCAL_FILES:-false}
      - LOCIZE_CLI_TIMEOUT=${LOCIZE_CLI_TIMEOUT:-30}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}

    # Volume mounts for local development and testing
    volumes:
      # Mount local backup directory for inspection
      - ./backup-data:/app/backup/data
      # Mount the backup script for development (get latest code changes without rebuild)
      - ./backup.sh:/app/backup/backup.sh:ro

    # Resource limits for local testing
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

    # Labels for organization
    labels:
      - "com.docker.compose.project=locize-backup"
      - "com.docker.compose.service=backup"
      - "maintainer=ligouras"
      - "version=${LOCIZE_CLI_VERSION:-10.3.2}"

    # Network configuration to connect to MinIO
    networks:
      - default

  # Optional: MinIO for local S3 testing
  minio:
    image: minio/minio:latest
    container_name: locize-backup-minio
    profiles:
      - minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      - "com.docker.compose.project=locize-backup"
      - "com.docker.compose.service=minio"

  # Optional: Create MinIO bucket for testing
  minio-setup:
    image: minio/mc:latest
    container_name: locize-backup-minio-setup
    profiles:
      - minio
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set localminio http://minio:9000 minioadmin minioadmin123;
      mc mb localminio/locize-backups-test --ignore-existing;
      mc policy set public localminio/locize-backups-test;
      echo 'MinIO bucket setup complete';
      "
    labels:
      - "com.docker.compose.project=locize-backup"
      - "com.docker.compose.service=minio-setup"

volumes:
  minio-data:
    driver: local
    labels:
      - "com.docker.compose.project=locize-backup"

networks:
  default:
    name: locize-backup-network
    labels:
      - "com.docker.compose.project=locize-backup"
